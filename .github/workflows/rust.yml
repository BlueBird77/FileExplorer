name: Rust

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - run: npm i -g yarn
    
    - name: Install libgtk
      run: sudo apt install libwebkit2gtk-4.0-dev libssl-dev libgtk-3-dev libsoup2.4-dev libayatana-appindicator3-dev librsvg2-dev -y

    - name: Make sure you have Tauri CLI installed
      run: cargo install tauri-cli

    - name: Install dependencies
      run: yarn

    #- name: Run app for development
    #  run: cargo tauri dev

    - name: Build for production
      run: |
        cargo tauri build
        ls -gh
        zip -r build.zip dist
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}

    - name: Upload Release Assets
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build.zip
          asset_name: build.zip
          asset_content_type: application/zip
